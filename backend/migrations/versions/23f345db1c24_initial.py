"""Initial

Revision ID: 23f345db1c24
Revises: 906912b1c114
Create Date: 2025-05-31 23:15:29.704383

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '23f345db1c24'
down_revision: Union[str, None] = '906912b1c114'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('uid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.VARCHAR(), server_default='user', nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), nullable=False),
    sa.Column('verified_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('conversations',
    sa.Column('uid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index('idx_conversation_user', 'conversations', ['user_uid'], unique=False)
    op.create_index(op.f('ix_conversations_created_at'), 'conversations', ['created_at'], unique=False)
    op.create_index(op.f('ix_conversations_user_uid'), 'conversations', ['user_uid'], unique=False)
    op.create_table('documents',
    sa.Column('uid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('filename', sa.VARCHAR(), nullable=False),
    sa.Column('conversation_uid', sa.Uuid(), nullable=False),
    sa.Column('file_path', sa.VARCHAR(), nullable=False),
    sa.Column('upload_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.VARCHAR(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_uid'], ['conversations.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('file_path')
    )
    op.create_index('idx_document_conversation', 'documents', ['conversation_uid'], unique=False)
    op.create_index(op.f('ix_documents_conversation_uid'), 'documents', ['conversation_uid'], unique=False)
    op.create_index(op.f('ix_documents_upload_date'), 'documents', ['upload_date'], unique=False)
    op.create_table('messages',
    sa.Column('uid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('conversation_uid', sa.Uuid(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=False),
    sa.Column('prompt', sa.TEXT(), nullable=True),
    sa.Column('response', sa.TEXT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_uid'], ['conversations.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index('idx_message_conversation', 'messages', ['conversation_uid'], unique=False)
    op.create_index('idx_message_created_at', 'messages', ['created_at'], unique=False)
    op.create_index('idx_message_user', 'messages', ['user_uid'], unique=False)
    op.create_index(op.f('ix_messages_conversation_uid'), 'messages', ['conversation_uid'], unique=False)
    op.create_index(op.f('ix_messages_created_at'), 'messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_messages_user_uid'), 'messages', ['user_uid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_user_uid'), table_name='messages')
    op.drop_index(op.f('ix_messages_created_at'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_uid'), table_name='messages')
    op.drop_index('idx_message_user', table_name='messages')
    op.drop_index('idx_message_created_at', table_name='messages')
    op.drop_index('idx_message_conversation', table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_documents_upload_date'), table_name='documents')
    op.drop_index(op.f('ix_documents_conversation_uid'), table_name='documents')
    op.drop_index('idx_document_conversation', table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_conversations_user_uid'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_created_at'), table_name='conversations')
    op.drop_index('idx_conversation_user', table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
